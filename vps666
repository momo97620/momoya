#!/bin/bash

# 检查脚本是否被直接运行
if [[ "${BASH_SOURCE[0]}" != "${0}" ]]; then
    echo "This script must be run directly, not sourced."
    exit 1
fi

# 快捷指令检查标志文件
ALIAS_SET_FLAG="$HOME/.script_alias_set.log"
SCRIPT_NAME="vps_script.sh"  # 设定脚本名称，用于后续引用

# 显示主菜单
show_main_menu() {
    echo -e "请选择要执行的任务："
    echo "1. 搭建 Hysteria 节点"
    echo "2. 安装并配置 UFW 防火墙"
    echo "3. 配置密钥登录"
    echo "4. 修改登录端口号"
    echo "5. 卸载主脚本"
    echo "0. 退出"

    read -p "请输入选项 (0-5): " choice
    case $choice in
        1)
            echo "正在执行：搭建 Hysteria 节点"
            bash <(curl -sSL https://gist.githubusercontent.com/momo97620/68630501ec62d5f6ece848d5e3ffad4e/raw/203246731cde7f6ca90d8b2e934cf0ffa5127cb4/hy2)
            ;;
        2)
            echo "正在执行：安装并配置 UFW 防火墙"
            bash <(curl -sSL https://gist.githubusercontent.com/momo97620/2ecbf06ce959fda14b01c0ce9f34f3d8/raw/e7d1e2ad49decc464f0a814c436ca4b6151986e7/ufw_install.sh)
            ;;
        3)
            echo "正在执行：配置密钥登录"
            bash <(curl -sSL https://gist.githubusercontent.com/momo97620/035985261aa7f946270590a15ca4c9f6/raw/a843704765ad3e600461693379fd6b2fa0cecd66/miyao)
            ;;
        4)
            echo "正在执行：修改登录端口号"
            bash <(curl -sSL https://gist.githubusercontent.com/momo97620/685e1ead90ed0ad379c6a75e27409704/raw/aaeabe347f3612e9c308b898e64bcfd12276a067/duank)
            ;;
        5)
            echo "正在执行：卸载主脚本"
            uninstall_script
            ;;
        0)
            echo "退出程序"
            exit 0
            ;;
        *)
            echo "无效的选择，请重新输入！"
            show_main_menu
            ;;
    esac
}

# 卸载主脚本
uninstall_script() {
    echo "开始卸载主脚本并清除相关数据..."
    read -p "确定要卸载主脚本并清除相关数据吗？(y/n): " confirm
    if [ "$confirm" != "y" ]; then
        echo "卸载已取消。"
        exit 1
    fi

    TARGET_PATH="/usr/local/bin/vps_script.sh"
    sudo rm -f "$TARGET_PATH"
    echo "主脚本已卸载。"
    exit 0
}

# 设置快捷命令
setup_alias() {
    SCRIPT_PATH=$(realpath "${BASH_SOURCE[0]}")  # 获取当前脚本的绝对路径
    if [[ -f "$ALIAS_SET_FLAG" ]]; then
        echo "快捷指令 'n' 已设置，跳过重复设置。"
    else
        if ! grep -q "alias n='bash $SCRIPT_PATH'" ~/.bashrc; then
            # 将快捷指令添加到 .bashrc
            echo "alias n='bash $SCRIPT_PATH'" >> ~/.bashrc
            touch "$ALIAS_SET_FLAG"
            echo "已添加快捷命令 'n'。请运行 'source ~/.bashrc' 使更改生效。"
        fi
    fi
}

# 自动设置主机名
setup_hostname() {
    CURRENT_HOSTNAME=$(hostname)
    echo "当前主机名是：$CURRENT_HOSTNAME"
    # 取消设置主机名的代码，避免重复设置
}

# 自动赋予权限
setup_permissions() {
    SCRIPT_PATH=$(realpath "${BASH_SOURCE[0]}")
    chmod +x "$SCRIPT_PATH"
    echo "脚本已赋予执行权限。"
}

# 自动加载更新
auto_update() {
    echo "正在检查更新..."
    LATEST_SCRIPT=$(curl -sSL https://gist.githubusercontent.com/momo97620/your_gist_id/raw/vps_script.sh)
    if [[ "$LATEST_SCRIPT" != "$(cat "$SCRIPT_PATH")" ]]; then
        echo "发现新版本，正在更新..."
        echo "$LATEST_SCRIPT" > "$SCRIPT_PATH"
        chmod +x "$SCRIPT_PATH"
        echo "脚本已更新。"
    else
        echo "脚本已是最新版本。"
    fi
}

# 脚本入口逻辑
setup_alias  # 设置快捷命令
setup_hostname  # 设置主机名
setup_permissions  # 自动赋予权限
auto_update  # 自动加载更新
show_main_menu  # 显示主菜单