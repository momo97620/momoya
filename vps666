#!/bin/bash

# 定义颜色
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[0;33m'
BLUE='\033[0;34m'
LIGHTCYAN='\033[1;36m'
NC='\033[0m' # No Color

# 检查是否以 root 用户运行
if [ "$(id -u)" != "0" ]; then
    echo -e "${RED}请以 root 用户运行脚本。${NC}"
    exit 1
fi

# 获取当前脚本的绝对路径
SCRIPT_PATH=$(readlink -f "$0" 2>/dev/null || realpath "$0")

# 添加快捷键 n
setup_n_alias() {
    echo -e "${YELLOW}正在配置快捷指令 'n'...${NC}"

    local shell_config="$HOME/.bashrc"  # 默认是 bash
    if [[ "$SHELL" == *zsh ]]; then
        shell_config="$HOME/.zshrc"  # 如果是 zsh，修改为 zshrc
    fi

    # 检查是否已经存在 alias
    if grep -q "alias n='bash $SCRIPT_PATH'" "$shell_config"; then
        echo -e "${YELLOW}快捷指令 'n' 已存在，无需重复添加。${NC}"
    else
        echo "alias n='bash $SCRIPT_PATH'" >> "$shell_config"
        source "$shell_config"  # 立即生效
        echo -e "${GREEN}快捷指令 'n' 已配置！现在可以使用 'n' 快速启动脚本。${NC}"
    fi
}

# 子菜单逻辑
execute_task() {
    clear
    echo -e "${BLUE}====================== 任务页面 ======================${NC}"
    echo -e "${YELLOW}任务：$1${NC}"
    echo -e "${BLUE}=====================================================${NC}"
    eval "$2"  # 执行传入的任务命令
    echo -e "${GREEN}任务完成！按任意键返回主菜单...${NC}"
    read -n 1  # 等待用户按键
}

# 主菜单逻辑
show_main_menu() {
    while true; do
        clear  # 清屏显示主菜单
        echo -e "${GREEN}███████╗██╗  ██╗██╗██╗      ${NC}"
        echo -e "${GREEN}╚══██╔══╝██║  ██║██║██║      ${NC}"
        echo -e "${GREEN}   ██║   ███████║██║██║██████╗${NC}"
        echo -e "${GREEN}   ██║   ██╔══██║██║██║╚════╝${NC}"
        echo -e "${GREEN}   ██║   ██║  ██║██║██║██████╗${NC}"
        echo -e "${GREEN}   ╚═╝   ╚═╝  ╚═╝╚═╝╚═════╝${NC}"
        echo -e "${YELLOW}作者：emo的小默默${NC}"

        echo -e "${BLUE}========================== VPS 脚本菜单 ========================== ${NC}"
        echo -e "1. 搭建 Hysteria 节点           5. 卸载主脚本"
        echo -e "2. 安装并配置 UFW 防火墙       6. 一键WARP"
        echo -e "3. 配置密钥登录               7. BBR加速"
        echo -e "4. 修改登录端口号             8. Docker管理"
        echo -e "9. 系统信息查询               0. 退出"
        echo -e "${BLUE}=================================================================${NC}"

        read -p "请输入选项 (0-9): " choice
        case $choice in
            1)
                execute_task "搭建 Hysteria 节点" \
                    "bash <(curl -sSL https://gist.githubusercontent.com/momo97620/68630501ec62d5f6ece848d5e3ffad4e/raw/203246731cde7f6ca90d8b2e934cf0ffa5127cb4/hy2)"
                ;;
            2)
                execute_task "安装并配置 UFW 防火墙" \
                    "bash <(curl -sSL https://gist.githubusercontent.com/momo97620/2ecbf06ce959fda14b01c0ce9f34f3d8/raw/e7d1e2ad49decc464f0a814c436ca4b6151986e7/ufw_install.sh)"
                ;;
            3)
                execute_task "配置密钥登录" \
                    "bash <(curl -sSL https://gist.githubusercontent.com/momo97620/035985261aa7f946270590a15ca4c9f6/raw/a843704765ad3e600461693379fd6b2fa0cecd66/miyao)"
                ;;
            4)
                execute_task "修改登录端口号" \
                    "bash <(curl -sSL https://gist.githubusercontent.com/momo97620/685e1ead90ed0ad379c6a75e27409704/raw/aaeabe347f3612e9c308b898e64bcfd12276a067/duank)"
                ;;
            5)
                execute_task "卸载主脚本" "uninstall_script"
                ;;
            6)
                execute_task "一键WARP" \
                    "wget -N https://gitlab.com/fscarmen/warp/-/raw/main/menu.sh && bash menu.sh"
                ;;
            7)
                execute_task "BBR加速" \
                    "wget -O tcp.sh \"https://github.com/ylx2016/Linux-NetSpeed/raw/master/tcp.sh\" && chmod +x tcp.sh && ./tcp.sh"
                ;;
            8)
                execute_task "Docker管理" \
                    "curl -fsSL \"https://raw.githubusercontent.com/momo97620/momoya/refs/heads/main/docker\" -o docker_script && chmod +x docker_script && ./docker_script"
                ;;
            9)
                execute_task "系统信息查询" \
                    "bash <(curl -sSL https://raw.githubusercontent.com/momo97620/momoya/main/xitong)"
                ;;
            0)
                echo -e "${GREEN}退出程序...${NC}"
                exit 0
                ;;
            *)
                echo -e "${RED}无效的选择，请重新输入！${NC}"
                read -n 1 -p "按任意键返回主菜单..."
                ;;
        esac
    done
}

# 自动配置 n 快捷指令
setup_n_alias

# 脚本入口
show_main_menu