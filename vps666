#!/bin/bash

# 定义颜色
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[0;33m'
BLUE='\033[0;34m'
LIGHTBLUE='\033[1;34m'
LIGHTCYAN='\033[1;36m'
BRIGHT_MAGENTA='\033[1;35m'  # 亮紫色
WHITE='\033[1;37m'
NC='\033[0m' # No Color

# 定义符号链接的目标和链接名称
LINK_NAME="/usr/local/bin/m"
SCRIPT_PATH="/root/vps666"

# 检查符号链接是否已经存在
if [ ! -L "$LINK_NAME" ]; then
    ln -s "$SCRIPT_PATH" "$LINK_NAME"
    echo -e "${GREEN}符号链接 $LINK_NAME 已创建。${NC}"
else
    echo -e "${YELLOW}符号链接 $LINK_NAME 已存在。${NC}"
fi

# 获取脚本路径
SCRIPT_PATH=$(realpath "${BASH_SOURCE[0]}")
SCRIPT_DIR=$(dirname "$SCRIPT_PATH")

# 定义固定安装路径
INSTALL_DIR="/usr/local/my_script"

# 检查脚本是否被直接运行
if [[ "${BASH_SOURCE[0]}" != "${0}" ]]; then
    echo -e "${RED}此脚本必须直接运行，而不是被引用。${NC}"
    exit 1
fi

# 检查是否以 root 用户运行
if [ "$(id -u)" != "0" ]; then
    echo -e "${RED}请以 root 用户运行脚本。${NC}"
    exit 1
fi

# 安装主脚本
install_script() {
    echo -e "${YELLOW}正在安装：将脚本安装到 $INSTALL_DIR...${NC}"
    
    if [ ! -d "$INSTALL_DIR" ]; then
        mkdir -p "$INSTALL_DIR"
    fi
    
    cp "$SCRIPT_PATH" "$INSTALL_DIR"
    chmod +x "$INSTALL_DIR/$(basename "$SCRIPT_PATH")"
    
    echo -e "${GREEN}脚本已安装到 $INSTALL_DIR。${NC}"
}

# 执行子脚本
execute_script() {
    local script_url="$1"
    local success_message="$2"
    
    bash <(curl -sSL "$script_url")
    echo -e "${GREEN}$success_message${NC}"
    
    read -p "按任意键返回主菜单..."
}

# 设置 IPv4/6 优先级
set_ip_priority() {
    # 检查当前优先级
    check_current_priority() {
        if grep -q "net.ipv6.conf.all.disable_ipv6 = 1" /etc/sysctl.conf; then
            echo "当前优先级：IPv4"
        else
            echo "当前优先级：IPv6"
        fi
    }

    # 设置优先级
    set_priority() {
        case "$1" in
            1)
                echo "正在设置优先使用 IPv4..."
                # 禁用 IPv6
                echo "net.ipv6.conf.all.disable_ipv6 = 1" >> /etc/sysctl.conf
                echo "net.ipv6.conf.default.disable_ipv6 = 1" >> /etc/sysctl.conf
                # 应用更改
                sysctl -p
                echo "IPv4 优先设置完成！"
                ;;
            2)
                echo "正在设置优先使用 IPv6..."
                # 启用 IPv6
                sed -i '/net.ipv6.conf.all.disable_ipv6/d' /etc/sysctl.conf
                sed -i '/net.ipv6.conf.default.disable_ipv6/d' /etc/sysctl.conf
                echo "net.ipv6.conf.all.disable_ipv6 = 0" >> /etc/sysctl.conf
                echo "net.ipv6.conf.default.disable_ipv6 = 0" >> /etc/sysctl.conf
                # 应用更改
                sysctl -p
                echo "IPv6 优先设置完成！"
                ;;
            *)
                echo "无效的选项！请输入 '1' 或 '2'。"
                exit 1
                ;;
        esac
    }

    # 主菜单
    show_menu() {
        clear
        echo "==============================="
        echo " 设置 IPv4 或 IPv6 优先级"
        echo "==============================="
        check_current_priority
        echo "1. 优先使用 IPv4"
        echo "2. 优先使用 IPv6"
        echo "==============================="
        read -p "请输入选项 [1/2]：" choice

        # 根据用户选择设置优先级
        set_priority "$choice"

        # 提示用户按任意键退出
        echo "设置完成！按任意键退出..."
        read -n 1 -s -r
    }

    show_menu
}

# 主菜单
main_menu() {
    while true; do
        clear
        echo "==============================="
        echo " 主菜单"
        echo "==============================="
        echo "1. 安装脚本"
        echo "2. 设置 IPv4/6 优先级"
        echo "3. 申请 SSH 密钥"
        echo "4. 退出"
        echo "==============================="
        read -p "请选择一个选项 [1-4]：" choice
        
        case "$choice" in
            1)
                install_script
                ;;
            2)
                set_ip_priority
                ;;
            3)
                # 运行申请 SSH 密钥的子脚本
                execute_script "https://example.com/path/to/ssh_key_script.sh" "SSH 密钥申请完成！"
                ;;
            4)
                echo -e "${GREEN}退出程序。${NC}"
                exit 0
                ;;
            *)
                echo -e "${RED}无效的选项，请重试。${NC}"
                read -p "按任意键继续..."
                ;;
        esac
    done
}

# 启动主菜单
main_menu
