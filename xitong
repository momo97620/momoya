#!/bin/bash

# 颜色定义
NC='\033[0m' # 恢复默认颜色
YELLOW='\033[1;33m' # 黄色
GREEN='\033[1;32m' # 绿色
RED='\033[1;31m' # 红色

# 格式化运行时间为中文
format_runtime() {
    local runtime=$(uptime -p)
    runtime=${runtime/up /}
    runtime=${runtime/years/年}
    runtime=${runtime/year/年}
    runtime=${runtime/months/月}
    runtime=${runtime/month/月}
    runtime=${runtime/weeks/周}
    runtime=${runtime/week/周}
    runtime=${runtime/days/天}
    runtime=${runtime/day/天}
    runtime=${runtime/hours/小时}
    runtime=${runtime/hour/小时}
    runtime=${runtime/minutes/分钟}
    runtime=${runtime/minute/分钟}
    echo "已运行 $runtime"
}

# 获取 Swap 信息
get_swap_info() {
    local swap_total_kb=$(grep SwapTotal /proc/meminfo | awk '{print $2}')
    local swap_free_kb=$(grep SwapFree /proc/meminfo | awk '{print $2}')

    # 如果 SwapTotal 为空或者为 0，则说明 Swap 未安装
    if [[ -z "$swap_total_kb" || "$swap_total_kb" -eq 0 ]]; then
        echo "未安装"
    else
        # 计算 Swap 使用情况
        local swap_total=$(awk "BEGIN {printf \"%.2f GB\", $swap_total_kb / 1024 / 1024}")
        local swap_used=$(awk "BEGIN {printf \"%.2f GB\", ($swap_total_kb - $swap_free_kb) / 1024 / 1024}")
        local swap_percentage=$(awk "BEGIN {printf \"%.1f%%\", (($swap_total_kb - $swap_free_kb) / $swap_total_kb) * 100}")

        echo "$swap_used/$swap_total ($swap_percentage)"
    fi
}

# 获取系统基本信息
get_system_info() {
    local HOSTNAME=$(hostname)
    local OS_INFO=$(grep PRETTY_NAME /etc/os-release | cut -d '=' -f2 | tr -d '"')
    local KERNEL_VERSION=$(uname -r)
    local CPU_INFO=$(lscpu | awk -F': +' '/Model name:/ {print $2; exit}')
    local CPU_CORES=$(nproc)
    local CPU_ARCH=$(uname -m)
    local MEM_INFO=$(free -h | awk 'NR==2{printf "%s/%s (%.1f%%)", $3, $2, $3/$2*100}')
    local SWAP_INFO=$(get_swap_info)  # 获取 Swap 信息
    local DISK_INFO=$(df -h | awk '$NF=="/" {printf "%s/%s (%s)", $3, $2, $5}')

    echo "$HOSTNAME|$OS_INFO|$KERNEL_VERSION|$CPU_INFO|$CPU_CORES|$CPU_ARCH|$MEM_INFO|$SWAP_INFO|$DISK_INFO"
}

# 获取地理位置信息
get_location() {
    local services=("ipinfo.io" "ip-api.com" "freegeoip.net")
    local ipinfo country city isp

    for service in "${services[@]}"; do
        ipinfo=$(curl -s "https://$service")
        country=$(echo "$ipinfo" | grep 'country' | awk -F': ' '{print $2}' | tr -d '",')
        city=$(echo "$ipinfo" | grep 'city' | awk -F': ' '{print $2}' | tr -d '",')
        isp=$(echo "$ipinfo" | grep 'org' | awk -F': ' '{print $2}' | tr -d '",')

        if [[ -n "$country" && -n "$city" ]]; then
            echo "$country $city|$isp"
            return
        fi
    done

    echo "未知位置|未知运营商"
}

# 获取网络流量（准确方式）
get_network_traffic() {
    local interface=$(ip route | grep default | awk '{print $5}' | head -n1)

    if [[ -z "$interface" ]]; then
        interface=$(ip link show | awk -F: '$2 !~ /lo/ {print $2;exit}' | tr -d ' ')
    fi

    if [[ -z "$interface" ]]; then
        echo "0.00"
        return
    fi

    local rx_bytes=$(awk -v iface="$interface" '$1 == iface ":" {print $2}' /proc/net/dev)
    local tx_bytes=$(awk -v iface="$interface" '$1 == iface ":" {print $10}' /proc/net/dev)

    if [[ -z "$rx_bytes" || -z "$tx_bytes" ]]; then
        echo "0.00"
        return
    fi

    local total_bytes=$((rx_bytes + tx_bytes))
    local total_gb=$(echo "scale=2; $total_bytes/1024/1024/1024" | bc)

    echo "${total_gb:-0.00}"
}

# 获取网络信息
get_network_info() {
    local ipv4=$(curl -s4 https://ipinfo.io/ip)
    local ipv6=$(ip -6 addr show | grep inet6 | grep -v '::1' | grep -v 'fe80' | awk '{print $2}' | cut -d'/' -f1 | head -n1)

    echo "${ipv4:-未分配}|${ipv6:-未分配}"
}

# 主程序
main() {
    clear
    echo -e "${GREEN}系统信息收集与分析${NC}"
    echo -e "${RED}--------------------${NC}"

    # 获取系统信息
    IFS='|' read -r HOSTNAME OS_INFO KERNEL_VERSION CPU_INFO CPU_CORES CPU_ARCH MEM_INFO SWAP_INFO DISK_INFO <<< "$(get_system_info)"

    # 获取网络和位置信息
    IFS='|' read -r LOCATION ISP <<< "$(get_location)"
    IFS='|' read -r IPV4 IPV6 <<< "$(get_network_info)"
    local TOTAL_TRAFFIC=$(get_network_traffic)

    # 当前时间和时区
    local CURRENT_TIME=$(date "+%Y-%m-%d %H:%M:%S")
    local TIMEZONE=$(timedatectl | grep "Time zone" | awk '{print $3}')
    local RUNTIME=$(format_runtime)

    # 输出系统信息
    echo -e "${GREEN}系统基本信息:${NC}"
    echo -e "主机名:       ${YELLOW}$HOSTNAME${NC}"
    echo -e "操作系统:     ${YELLOW}$OS_INFO${NC}"
    echo -e "内核版本:     ${YELLOW}$KERNEL_VERSION${NC}"
    echo -e "${RED}--------------------${NC}"

    echo -e "${GREEN}硬件信息:${NC}"
    echo -e "CPU型号:      ${YELLOW}$CPU_INFO${NC}"
    echo -e "CPU核心数:    ${YELLOW}$CPU_CORES${NC}"
    echo -e "CPU架构:      ${YELLOW}$CPU_ARCH${NC}"
    echo -e "内存:         ${YELLOW}$MEM_INFO${NC}"
    echo -e "Swap:         ${YELLOW}$SWAP_INFO${NC}"
    echo -e "硬盘:         ${YELLOW}$DISK_INFO${NC}"
    echo -e "${RED}--------------------${NC}"

    echo -e "${GREEN}网络信息:${NC}"
    echo -e "运营商:       ${YELLOW}$ISP${NC}"
    echo -e "地理位置:     ${YELLOW}$LOCATION${NC}"
    echo -e "IPv4地址:     ${YELLOW}$IPV4${NC}"
    echo -e "IPv6地址:     ${YELLOW}$IPV6${NC}"
    echo -e "总网络流量:   ${YELLOW}${TOTAL_TRAFFIC}GB${NC}"
    echo -e "${RED}--------------------${NC}"

    echo -e "${GREEN}系统时间:${NC}"
    echo -e "时区:         ${YELLOW}$TIMEZONE${NC}"
    echo -e "当前时间:     ${YELLOW}$CURRENT_TIME${NC}"
    echo -e "运行时间:     ${YELLOW}$RUNTIME${NC}"
    echo -e "${RED}--------------------${NC}"

    echo -e "\n${GREEN}操作完成${NC}"
}

# 调用主程序
main