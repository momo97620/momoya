#!/bin/bash

# 检查是否安装 curl 和 jq
check_dependencies() {
    # 如果 curl 没有安装，则自动安装
    if ! command -v curl &>/dev/null; then
        echo "curl 未安装，正在自动安装..."
        sudo apt update -y > /dev/null 2>&1
        sudo apt install -y curl > /dev/null 2>&1
    fi

    # 如果 jq 没有安装，则自动安装
    if ! command -v jq &>/dev/null; then
        echo "jq 未安装，正在自动安装..."
        sudo apt update -y > /dev/null 2>&1
        sudo apt install -y jq > /dev/null 2>&1
    fi
}

# 获取本机的 IPv6 地址
get_ipv6() {
    IPV6=$(ip -6 addr show scope global | grep -oP 'inet6 \K[0-9a-fA-F:]+')
    if [ -z "$IPV6" ]; then
        IPV6="未分配"
    fi
    echo "$IPV6"
}

# 获取地理位置
get_location() {
    LOCATION=$(curl -s https://ipinfo.io | jq -r '.region + " " + .country' 2>/dev/null)
    if [ -z "$LOCATION" ]; then
        LOCATION=$(curl -s https://ipapi.co/json | jq -r '.region + " " + .country_name' 2>/dev/null)
    fi
    if [ -z "$LOCATION" ]; then
        LOCATION=$(curl -s http://ip-api.com/json/ | jq -r '.regionName + " " + .country' 2>/dev/null)
    fi
    if [ -z "$LOCATION" ]; then
        LOCATION=$(curl -s https://freegeoip.app/json/ | jq -r '.region_name + " " + .country_name' 2>/dev/null)
    fi
    [ -z "$LOCATION" ] && LOCATION="未知"
    echo "$LOCATION"
}

# 获取运行时长
get_uptime() {
    UPTIME_SEC=$(awk '{print $1}' /proc/uptime)
    DAYS=$((UPTIME_SEC / 86400))
    HOURS=$(( (UPTIME_SEC % 86400) / 3600 ))
    MINUTES=$(( (UPTIME_SEC % 3600) / 60 ))
    echo "${DAYS}天 ${HOURS}小时 ${MINUTES}分钟"
}

# 获取防火墙状态
get_firewall_status() {
    if command -v ufw &>/dev/null; then
        STATUS=$(ufw status | grep -i "status" | awk '{print $2}')
        echo "${STATUS:-未知}"
    else
        echo "未安装"
    fi
}

# 设置颜色
COLORS=( 
    '\033[0m'  # 默认
    '\033[32m' # 绿色
    '\033[34m' # 蓝色
    '\033[36m' # 青色
    '\033[33m' # 黄色
    '\033[31m' # 红色
)

# 主程序
main() {
    check_dependencies

    HOSTNAME=$(hostname)
    OS_VERSION=$(lsb_release -d | awk -F'\t' '{print $2}')
    KERNEL_VERSION=$(uname -r)
    ARCH=$(uname -m)
    CPU_MODEL=$(awk -F': ' '/model name/{print $2; exit}' /proc/cpuinfo)
    CPU_CORES=$(grep -c '^processor' /proc/cpuinfo)
    CPU_FREQ=$(awk -F'[ :]' '/cpu MHz/{printf "%.1f GHz", $3/1000; exit}' /proc/cpuinfo)
    LOAD_AVG=$(awk '{print $1", "$2", "$3}' /proc/loadavg)
    MEM_TOTAL=$(free -m | awk '/Mem:/{print $2}')
    MEM_USED=$(free -m | awk '/Mem:/{print $3}')
    SWAP_TOTAL=$(free -m | awk '/Swap:/{print $2}')
    SWAP_USED=$(free -m | awk '/Swap:/{print $3}')
    DISK_USAGE=$(df -h --total | awk '/^total/{print $3"/"$2 " ("$5")"}')
    RX_BYTES=$(ifconfig | grep -oP 'RX bytes:\K\d+' | awk '{sum+=$1} END {printf "%.2f GB\n", sum/1024/1024/1024}')
    TX_BYTES=$(ifconfig | grep -oP 'TX bytes:\K\d+' | awk '{sum+=$1} END {printf "%.2f GB\n", sum/1024/1024/1024}')
    NETWORK_ALGO=$(sysctl net.ipv4.tcp_congestion_control | awk '{print $3}')
    LOCATION=$(get_location)
    FIREWALL_STATUS=$(get_firewall_status)
    ISP=$(curl -s https://ipinfo.io/org | sed 's/AS[0-9]* //')
    IPV4=$(curl -s4 https://ipinfo.io/ip || echo "未分配")
    IPV6=$(get_ipv6)
    DNS=$(cat /etc/resolv.conf | grep 'nameserver' | awk '{print $2}' | xargs)
    TIMEZONE=$(cat /etc/timezone 2>/dev/null || timedatectl | grep "Time zone" | awk '{print $3}')
    SYSTEM_TIME=$(date "+%Y-%m-%d %H:%M:%S")
    UPTIME=$(get_uptime)

    clear
    echo -e "${COLORS[2]}系统信息查询${COLORS[0]}\n"
    echo -e "${COLORS[1]}主机名:${COLORS[0]}       $HOSTNAME"
    echo -e "${COLORS[1]}系统版本:${COLORS[0]}     $OS_VERSION"
    echo -e "${COLORS[1]}Linux版本:${COLORS[0]}    $KERNEL_VERSION"
    echo -e "${COLORS[4]}-------------${COLORS[0]}"
    echo -e "${COLORS[1]}CPU架构:${COLORS[0]}      $ARCH"
    echo -e "${COLORS[1]}CPU型号:${COLORS[0]}      $CPU_MODEL"
    echo -e "${COLORS[1]}CPU核心数:${COLORS[0]}    $CPU_CORES"
    echo -e "${COLORS[1]}CPU频率:${COLORS[0]}      $CPU_FREQ"
    echo -e "${COLORS[4]}-------------${COLORS[0]}"
    echo -e "${COLORS[1]}CPU占用:${COLORS[0]}      $(grep 'cpu ' /proc/stat | awk '{usage=($2+$4)*100/($2+$4+$5); printf "%.0f%%", usage}')"
    echo -e "${COLORS[1]}系统负载:${COLORS[0]}     $LOAD_AVG"
    echo -e "${COLORS[1]}物理内存:${COLORS[0]}     ${MEM_USED}/${MEM_TOTAL} MB ($(awk "BEGIN {printf \"%.2f\", $MEM_USED/$MEM_TOTAL*100}")%)"
    echo -e "${COLORS[1]}虚拟内存:${COLORS[0]}     ${SWAP_USED}/${SWAP_TOTAL} MB ($(awk "BEGIN {printf \"%.2f\", $SWAP_USED/$SWAP_TOTAL*100}")%)"
    echo -e "${COLORS[1]}硬盘占用:${COLORS[0]}     $DISK_USAGE"
    echo -e "${COLORS[4]}-------------${COLORS[0]}"
    echo -e "${COLORS[1]}总接收:${COLORS[0]}       $RX_BYTES"
    echo -e "${COLORS[1]}总发送:${COLORS[0]}       $TX_BYTES"
    echo -e "${COLORS[4]}-------------${COLORS[0]}"
    echo -e "${COLORS[1]}网络算法:${COLORS[0]}     $NETWORK_ALGO"
    echo -e "${COLORS[1]}防火墙状态:${COLORS[0]}   $FIREWALL_STATUS"
    echo -e "${COLORS[4]}-------------${COLORS[0]}"
    echo -e "${COLORS[1]}运营商:${COLORS[0]}       $ISP"
    echo -e "${COLORS[1]}IPv4地址:${COLORS[0]}     $IPV4"
    echo -e "${COLORS[1]}IPv6地址:${COLORS[0]}     $IPV6"
    echo -e "${COLORS[1]}DNS地址:${COLORS[0]}      $DNS"
    echo -e "${COLORS[1]}地理位置:${COLORS[0]}     $LOCATION"
    echo -e "${COLORS[1]}系统时间:${COLORS[0]}     $TIMEZONE $SYSTEM_TIME"
    echo -e "${COLORS[1]}运行时长:${COLORS[0]}     $UPTIME"
    echo -e "${COLORS[4]}-------------${COLORS[0]}"
    echo -e "${COLORS[5]}操作完成${COLORS[0]}"
    echo -e "按任意键继续..."
    read -n 1
}

main