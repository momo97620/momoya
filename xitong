#!/bin/bash

# 检查是否安装必要工具
check_dependencies() {
    for cmd in curl jq; do
        if ! command -v $cmd &>/dev/null; then
            sudo apt update -y > /dev/null 2>&1
            sudo apt install -y $cmd > /dev/null 2>&1
        fi
    done
}

# 获取地理位置
get_location() {
    LOCATION=$(curl -s https://ipinfo.io | jq -r '.region + " " + .country' 2>/dev/null)
    if [ -z "$LOCATION" ]; then
        LOCATION=$(curl -s https://ipapi.co/json | jq -r '.region + " " + .country_name' 2>/dev/null)
    fi
    if [ -z "$LOCATION" ]; then
        LOCATION=$(curl -s http://ip-api.com/json/ | jq -r '.regionName + " " + .country' 2>/dev/null)
    fi
    if [ -z "$LOCATION" ]; then
        LOCATION=$(curl -s https://freegeoip.app/json/ | jq -r '.region_name + " " + .country_name' 2>/dev/null)
    fi
    [ -z "$LOCATION" ] && LOCATION="未知"
    echo "$LOCATION"
}

# 获取运行时长
get_uptime() {
    UPTIME_SEC=$(awk '{print $1}' /proc/uptime)
    if [ -z "$UPTIME_SEC" ]; then
        echo "未知"
        return
    fi

    DAYS=$((UPTIME_SEC / 86400))
    HOURS=$(((UPTIME_SEC % 86400) / 3600))
    MINUTES=$(((UPTIME_SEC % 3600) / 60))

    if [ "$DAYS" -gt 0 ]; then
        echo "${DAYS}天 ${HOURS}小时 ${MINUTES}分钟"
    elif [ "$HOURS" -gt 0 ]; then
        echo "${HOURS}小时 ${MINUTES}分钟"
    else
        echo "${MINUTES}分钟"
    fi
}

# 获取防火墙状态
get_firewall_status() {
    if command -v ufw &>/dev/null; then
        STATUS=$(ufw status | grep -i "status" | awk '{print $2}')
        echo "${STATUS:-未知}"
    else
        echo "未安装"
    fi
}

# 主程序
main() {
    check_dependencies

    HOSTNAME=$(hostname)
    OS_VERSION=$(lsb_release -d | awk -F'\t' '{print $2}')
    KERNEL_VERSION=$(uname -r)
    ARCH=$(uname -m)
    CPU_MODEL=$(awk -F': ' '/model name/{print $2; exit}' /proc/cpuinfo)
    CPU_CORES=$(grep -c '^processor' /proc/cpuinfo)
    CPU_FREQ=$(awk -F'[ :]' '/cpu MHz/{printf "%.1f GHz", $3/1000; exit}' /proc/cpuinfo)
    LOAD_AVG=$(awk '{print $1", "$2", "$3}' /proc/loadavg)
    MEM_TOTAL=$(free -m | awk '/Mem:/{print $2}')
    MEM_USED=$(free -m | awk '/Mem:/{print $3}')
    SWAP_TOTAL=$(free -m | awk '/Swap:/{print $2}')
    SWAP_USED=$(free -m | awk '/Swap:/{print $3}')
    DISK_USAGE=$(df -h --total | awk '/^total/{print $3"/"$2 " ("$5")"}')
    RX_BYTES=$(ifconfig | grep -oP 'RX bytes:\K\d+' | awk '{sum+=$1} END {printf "%.2f GB\n", sum/1024/1024/1024}')
    TX_BYTES=$(ifconfig | grep -oP 'TX bytes:\K\d+' | awk '{sum+=$1} END {printf "%.2f GB\n", sum/1024/1024/1024}')
    NETWORK_ALGO=$(sysctl net.ipv4.tcp_congestion_control | awk '{print $3}')
    LOCATION=$(get_location)
    FIREWALL_STATUS=$(get_firewall_status)
    ISP=$(curl -s https://ipinfo.io/org | sed 's/AS[0-9]* //')
    IPV4=$(curl -s4 https://ipinfo.io/ip || echo "未分配")
    IPV6=$(curl -s6 https://ipinfo.io/ip || echo "未分配")
    DNS=$(cat /etc/resolv.conf | grep 'nameserver' | awk '{print $2}' | xargs)
    TIMEZONE=$(cat /etc/timezone 2>/dev/null || timedatectl | grep "Time zone" | awk '{print $3}')
    SYSTEM_TIME=$(date "+%Y-%m-%d %H:%M:%S")
    UPTIME=$(get_uptime)

    clear
    echo -e "\033[1;32m系统信息查询\033[0m\n"
    echo -e "\033[1;34m主机名:\033[0m       $HOSTNAME"
    echo -e "\033[1;34m系统版本:\033[0m     $OS_VERSION"
    echo -e "\033[1;34mLinux版本:\033[0m    $KERNEL_VERSION"
    echo -e "-------------"
    echo -e "\033[1;34mCPU架构:\033[0m      $ARCH"
    echo -e "\033[1;34mCPU型号:\033[0m      $CPU_MODEL"
    echo -e "\033[1;34mCPU核心数:\033[0m    $CPU_CORES"
    echo -e "\033[1;34mCPU频率:\033[0m      $CPU_FREQ"
    echo -e "-------------"
    echo -e "\033[1;34mCPU占用:\033[0m      $(grep 'cpu ' /proc/stat | awk '{usage=($2+$4)*100/($2+$4+$5); printf "%.0f%%", usage}')"
    echo -e "\033[1;34m系统负载:\033[0m     $LOAD_AVG"
    echo -e "\033[1;34m物理内存:\033[0m     ${MEM_USED}/${MEM_TOTAL} MB ($(awk "BEGIN {printf \"%.2f\", $MEM_USED/$MEM_TOTAL*100}")%)"
    echo -e "\033[1;34m虚拟内存:\033[0m     ${SWAP_USED}/${SWAP_TOTAL} MB ($(awk "BEGIN {printf \"%.2f\", $SWAP_USED/$SWAP_TOTAL*100}")%)"
    echo -e "\033[1;34m硬盘占用:\033[0m     $DISK_USAGE"
    echo -e "-------------"
    echo -e "\033[1;34m总接收:\033[0m       $RX_BYTES"
    echo -e "\033[1;34m总发送:\033[0m       $TX_BYTES"
    echo -e "-------------"
    echo -e "\033[1;34m网络算法:\033[0m     $NETWORK_ALGO"
    echo -e "\033[1;34m防火墙状态:\033[0m   $FIREWALL_STATUS"
    echo -e "-------------"
    echo -e "\033[1;34m运营商:\033[0m       $ISP"
    echo -e "\033[1;34mIPv4地址:\033[0m     $IPV4"
    echo -e "\033[1;34mIPv6地址:\033[0m     $IPV6"
    echo -e "\033[1;34mDNS地址:\033[0m      $DNS"
    echo -e "\033[1;34m地理位置:\033[0m     $LOCATION"
    echo -e "\033[1;34m系统时间:\033[0m     $TIMEZONE $SYSTEM_TIME"
    echo -e "\033[1;34m运行时长:\033[0m     $UPTIME"
    echo -e "-------------"
    echo -e "\033[1;32m操作完成\033[0m"
    echo -e "按任意键继续..."
    read -n 1
}

main