#!/bin/bash

# 日志记录
LOGFILE="/var/log/reverse_proxy_setup.log"
log() {
    echo "$(date '+%Y-%m-%d %H:%M:%S') - $1" >> "$LOGFILE"
}

# 清屏
clear

# 动态检测操作系统
detect_os() {
    if [ -f /etc/os-release ]; then
        . /etc/os-release
        OS=$ID
        VERSION_ID=$VERSION_ID
    else
        echo "无法检测操作系统类型。请确认系统是否兼容。"
        exit 1
    fi
}

# 安装必要的软件包
install_packages() {
    echo "正在安装必要的软件包..."
    export DEBIAN_FRONTEND=noninteractive
    case $OS in
        debian | ubuntu)
            sudo apt update
            sudo apt install -y nginx certbot python3-certbot-nginx curl || {
                echo "软件包安装失败，请检查网络或源配置。"
                exit 1
            }
            sudo dpkg --configure -a
            sudo apt clean
            ;;
        centos | rocky | almalinux)
            sudo yum install -y epel-release
            sudo yum install -y nginx certbot python3-certbot-nginx curl || {
                echo "软件包安装失败，请检查网络或源配置。"
                exit 1
            }
            ;;
        *)
            echo "暂不支持的操作系统: $OS"
            exit 1
            ;;
    esac

    # 验证安装结果
    if ! which nginx &>/dev/null; then
        echo "Nginx 安装失败。"
        exit 1
    fi
    if ! which certbot &>/dev/null; then
        echo "Certbot 安装失败。"
        exit 1
    fi

    ensure_permissions
    log "必要软件包安装完成。"
}

# 修复 Certbot 路径问题
fix_certbot_path() {
    if ! which certbot &>/dev/null; then
        echo "Certbot 未找到，尝试修复路径..."
        if [ -d "/usr/local/bin" ]; then
            sudo ln -s /usr/bin/certbot /usr/local/bin/certbot
            echo "已修复 Certbot 路径到 /usr/local/bin/"
        else
            echo "无法找到适当的路径修复 Certbot。"
            exit 1
        fi
    fi
}

# 确保权限正确
ensure_permissions() {
    sudo mkdir -p /etc/nginx/sites-available /etc/nginx/sites-enabled /var/www/html
    sudo chmod -R 755 /etc/nginx /var/www/html
    sudo chown -R www-data:www-data /var/www/html
    log "权限已正确赋予：/etc/nginx 和 /var/www/html"
}

# 配置验证路径和 Nginx 配置
setup_validation_path() {
    local domain="$1"
    local nginx_conf="/etc/nginx/sites-available/$domain.conf"

    # 提前创建验证路径
    sudo mkdir -p /var/www/html/.well-known/acme-challenge
    sudo chmod -R 755 /var/www/html/.well-known

    # 确保验证路径配置在 Nginx 文件中
    if [ -f "$nginx_conf" ]; then
        if ! grep -q ".well-known/acme-challenge" "$nginx_conf"; then
            sudo sed -i "/server_name/a \ \ \ \ location ^~ /.well-known/acme-challenge/ {\n\ \ \ \ \ \ \ \ root /var/www/html;\n\ \ \ \ \ \ \ \ default_type \"text/plain\";\n\ \ \ \ }\n" "$nginx_conf"
            log "验证路径已添加到 Nginx 配置: $nginx_conf"
        fi
    else
        echo "未找到 Nginx 配置文件: $nginx_conf"
        exit 1
    fi

    # 测试并重载 Nginx 配置
    if sudo nginx -t; then
        sudo systemctl reload nginx
        log "Nginx 配置已重新加载。"
    else
        echo "Nginx 配置测试失败，请检查配置文件。"
        exit 1
    fi
}

# 查询证书到期时间
check_certificate_expiry() {
    read -p "请输入要查询证书的域名: " domain
    if sudo certbot certificates | grep -q "Domains: $domain"; then
        sudo certbot certificates | awk "/Certificate Name:.*$domain/,/Expiry Date/" | grep "Expiry Date" | awk '{print "域名:", domain, "- 到期时间:", $3, $4, $5}'
    else
        echo "未找到域名 $domain 的证书。"
    fi
    read -p "按任意键返回上一页..." temp
}

# 删除证书
delete_certificate() {
    read -p "请输入要删除证书的域名: " domain
    if sudo certbot delete --cert-name "$domain"; then
        echo "证书已删除: $domain"
        log "证书已删除: $domain"
    else
        echo "删除证书失败，请确认域名是否正确。"
    fi
    read -p "按任意键返回上一页..." temp
}

# 申请证书并更新 Nginx 配置
request_certificate() {
    local domain="$1"
    local email="$2"
    local nginx_conf="/etc/nginx/sites-available/$domain.conf"

    if sudo certbot certonly --webroot -w /var/www/html -d "$domain" --non-interactive --agree-tos --email "$email"; then
        echo "SSL/TLS 证书申请成功: $domain"
        log "SSL/TLS 证书申请成功: $domain"

        # 更新 Nginx 配置文件以使用 SSL
        sudo tee "$nginx_conf" >/dev/null <<EOF
server {
    listen 80;
    server_name $domain;
    return 301 https://\$host\$request_uri;
}

server {
    listen 443 ssl;
    server_name $domain;

    ssl_certificate /etc/letsencrypt/live/$domain/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/$domain/privkey.pem;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_session_cache shared:SSL:10m;

    location / {
        proxy_pass http://$reverseproxy:$port;
        proxy_set_header Host \$host;
        proxy_set_header X-Real-IP \$remote_addr;
        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto \$scheme;
    }
}
EOF

        # 测试并重载 Nginx 配置
        if sudo nginx -t; then
            sudo systemctl reload nginx
            echo "Nginx 配置已更新为使用 SSL。"
            log "Nginx 配置已更新为使用 SSL。"
        else
            echo "Nginx 配置更新失败，请检查配置文件。"
            exit 1
        fi
    else
        echo "证书申请失败，请检查域名或网络配置。"
        log "证书申请失败: $domain"
        exit 1
    fi
}

# 主菜单
while true; do
    clear
    echo "=========================================="
    echo "请选择操作："
    echo "1. 配置反向代理并申请 SSL 证书"
    echo "2. 查询已配置的反向代理"
    echo "3. 查询已申请的证书"
    echo "4. 删除反向代理配置"
    echo "5. 查看证书到期时间"
    echo "6. 删除证书"
    echo "0. 退出"
    echo "=========================================="
    read -p "请输入操作编号 (0-6): " choice
    case $choice in
        1) configure_reverse_proxy_and_ssl ;;
        2) 
            ls /etc/nginx/sites-available/
            read -p "按任意键返回上一页..." temp
            ;;
        3) 
            sudo certbot certificates
            read -p "按任意键返回上一页..." temp
            ;;
        4) 
            read -p "请输入要删除的域名: " domain_to_delete
            sudo rm -f "/etc/nginx/sites-available/$domain_to_delete.conf"
            sudo rm -f "/etc/nginx/sites-enabled/$domain_to_delete.conf"
            sudo systemctl reload nginx
            echo "已删除反向代理配置: $domain_to_delete"
            read -p "按任意键返回上一页..." temp
            ;;
        5) check_certificate_expiry ;;
        6) delete_certificate ;;
        0) exit 0 ;;
        *) echo "无效的选择，请重新输入。" ;;
    esac
done