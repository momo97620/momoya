#!/bin/bash

# 清屏
clear

# 日志文件
LOGFILE="/var/log/reverse_proxy_setup.log"

# 记录日志的函数
log() {
    echo "$(date '+%Y-%m-%d %H:%M:%S') - $1" >> "$LOGFILE"
}

# 获取证书到期时间
get_cert_expiry() {
    cert_info=$(sudo certbot certificates 2>/dev/null)
    if [[ $? -eq 0 && $cert_info ]]; then
        expiry_date=$(echo "$cert_info" | grep 'Expiry Date' | awk '{print $3, $4, $5}')
        echo "当前证书到期时间: $expiry_date"
    else
        echo "没有找到有效的 SSL/TLS 证书。"
    fi
}

# 检查 Nginx 状态
check_nginx_status() {
    if systemctl is-active --quiet nginx; then
        echo "Nginx 状态: 运行中"
    else
        echo "Nginx 状态: 未安装或未运行"
    fi
}

# 菜单显示
show_menu() {
    clear
    check_nginx_status  # 显示 Nginx 状态
    get_cert_expiry     # 显示证书到期时间
    echo "=========================================="
    echo "请选择操作："
    echo "1. 配置反向代理并申请 SSL 证书"
    echo "------------------------------------------"
    echo "2. 查询已配置的反向代理域名或 IP"
    echo "------------------------------------------"
    echo "3. 查询已申请的证书"
    echo "------------------------------------------"
    echo "4. 删除反向代理配置"
    echo "------------------------------------------"
    echo "0. 返回"
    echo "=========================================="
}

# 等待用户按键返回菜单
wait_for_user() {
    read -n 1 -s -r -p "按任意键返回菜单..."
}

# 主菜单循环
while true; do
    show_menu

    # 读取用户输入
    read -p "请输入操作编号 (0-4): " choice

    # 设置默认值
    yuming=""
    reverseproxy=""
    port=""

    # 安装 Nginx 和 Certbot 函数
    install_nginx() {
        if ! command -v nginx &> /dev/null; then
            echo "Nginx 未安装，正在安装..."
            sudo apt update
            sudo apt install nginx -y
            log "Nginx 安装完成"
        else
            echo "Nginx 已安装"
        fi
    }

    install_certbot() {
        if ! command -v certbot &> /dev/null; then
            echo "Certbot 未安装，正在安装..."
            sudo apt install certbot python3-certbot-nginx -y
            log "Certbot 安装完成"
        else
            echo "Certbot 已安装"
        fi
    }

    # 检查域名格式
    validate_domain() {
        if [[ ! "$1" =~ ^[a-zA-Z0-9.-]+$ ]]; then
            echo "无效的域名格式，请重新输入。"
            exit 1
        fi
    }

    # 配置反向代理并申请证书
    configure_reverse_proxy_and_ssl() {
        echo "配置反向代理并申请 SSL/TLS 证书..."
        log "开始配置反向代理: $yuming"

        # 输入域名
        read -e -p "请输入你的域名: " yuming
        validate_domain "$yuming"

        # 输入反向代理 IP 或 IPv6 地址
        read -e -p "请输入你的反代IP或IPv6地址: " reverseproxy
        reverseproxy="${reverseproxy:-127.0.0.1}"

        # 检测 IPv6 并处理格式
        if [[ "$reverseproxy" =~ : ]]; then
            [[ "$reverseproxy" != \[*\] ]] && reverseproxy="[$reverseproxy]"
        fi

        # 输入反向代理端口
        read -e -p "请输入你的反代端口: " port
        port="${port:-80}"

        # 输入电子邮件地址
        echo "请输入用于 Certbot 注册的电子邮件地址（用于接收证书到期提醒）："
        read -p "邮箱: " user_email

        if [[ ! "$user_email" =~ ^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$ ]]; then
            echo "无效的电子邮件地址，请重新运行脚本并输入正确的邮箱。"
            exit 1
        fi

        # 检查反向代理是否可达
        if ! curl --silent --connect-timeout 5 "http://$reverseproxy:$port" > /dev/null; then
            echo "反向代理 IP 或端口不可达，请检查配置。"
            exit 1
        fi

        # Nginx 配置文件路径
        nginx_conf="/etc/nginx/sites-available/$yuming.conf"
        template_path="/etc/nginx/sites-available/template.conf"

        # 使用模板生成配置文件
        if [ -f "$template_path" ]; then
            sudo cp "$template_path" "$nginx_conf"
            sudo sed -i "s/example.com/$yuming/g" "$nginx_conf"
            sudo sed -i "s|127.0.0.1:80|$reverseproxy:$port|g" "$nginx_conf"
        else
            echo "模板文件缺失，无法生成配置文件。"
            exit 1
        fi

        # 启用配置
        sudo ln -sf "$nginx_conf" /etc/nginx/sites-enabled/

        # 测试 Nginx 配置
        if sudo nginx -t; then
            echo "Nginx 配置正确，正在重启..."
            sudo systemctl restart nginx
            log "Nginx 配置成功并重启"
        else
            echo "Nginx 配置有误，无法重启。"
            exit 1
        fi

        # 安装 Certbot
        install_certbot

        # 使用 Certbot 申请证书
        if sudo certbot --nginx -d "$yuming" --non-interactive --agree-tos --email "$user_email"; then
            echo "SSL/TLS 证书申请成功!"
            log "SSL/TLS 证书申请成功: $yuming"
        else
            echo "证书申请失败，请检查域名和网络配置。"
            exit 1
        fi
    }

    # 查询已配置的反向代理
    query_reverse_proxy() {
        echo "查询已配置的反向代理..."
        if [ -d /etc/nginx/sites-available/ ]; then
            echo "已配置的反向代理域名和 IP:"
            for file in /etc/nginx/sites-available/*; do
                domain=$(grep -oP '(?<=server_name\s)[^\s;]+' "$file")
                proxy_ip=$(grep -oP '(?<=proxy_pass\shttp://)[^\s:;]+' "$file")
                [[ $domain ]] && echo "域名: $domain -> 反代 IP: $proxy_ip"
            done
        else
            echo "未找到任何反向代理配置文件。"
        fi
    }

    # 查询已申请的证书
    query_certificates() {
        echo "查询已申请的 SSL/TLS 证书..."
        sudo certbot certificates | grep -E 'Domains|Certificate Path'
    }

    # 删除反向代理配置
    delete_reverse_proxy() {
        echo "删除反向代理配置..."
        read -e -p "请输入要删除的域名: " domain_to_delete
        nginx_conf="/etc/nginx/sites-available/$domain_to_delete.conf"

        if [ -f "$nginx_conf" ]; then
            sudo rm "$nginx_conf"
            sudo rm "/etc/nginx/sites-enabled/$domain_to_delete.conf"
            echo "反向代理配置已删除: $domain_to_delete"
            log "删除反向代理配置: $domain_to_delete"
        else
            echo "未找到该域名的反向代理配置。"
        fi

        # 重启 Nginx
        sudo systemctl restart nginx
    }

    # 根据用户选择执行操作
    case $choice in
        1)
            install_nginx
            configure_reverse_proxy_and_ssl
            wait_for_user
            ;;
        2)
            query_reverse_proxy
            wait_for_user
            ;;
        3)
            query_certificates
            wait_for_user
            ;;
        4)
            delete_reverse_proxy
            wait_for_user
            ;;
        0)
            exit 0
            ;;
        *)
            echo "无效的选择，请选择 0 到 4 之间的数字。"
            wait_for_user
            ;;
    esac
done
