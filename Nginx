#!/bin/bash

# 清屏
clear

# 日志文件
LOGFILE="/var/log/reverse_proxy_setup.log"

# 记录日志的函数
log() {
    echo "$(date '+%Y-%m-%d %H:%M:%S') - $1" >> "$LOGFILE"
}

# 动态获取操作系统
detect_os() {
    if [ -f /etc/os-release ]; then
        . /etc/os-release
        OS=$ID
        VERSION_ID=$VERSION_ID
    else
        echo "无法检测操作系统类型。请确认系统是否兼容。"
        exit 1
    fi
}

# 安装必要的软件包
install_packages() {
    case $OS in
        debian | ubuntu)
            sudo apt update
            sudo apt install -y nginx certbot python3-certbot-nginx curl
            ;;
        centos | rocky | almalinux)
            sudo yum install -y epel-release
            sudo yum install -y nginx certbot python3-certbot-nginx curl
            ;;
        *)
            echo "暂不支持的操作系统: $OS"
            exit 1
            ;;
    esac
    log "必要软件包安装完成。"
}

# 配置 Nginx 并申请证书
configure_reverse_proxy_and_ssl() {
    read -e -p "请输入你的域名: " yuming
    if [[ ! "$yuming" =~ ^[a-zA-Z0-9.-]+$ ]]; then
        echo "无效的域名格式。"
        return
    fi

    read -e -p "请输入你的反代 IP 或 IPv6 地址 (默认: 127.0.0.1): " reverseproxy
    reverseproxy="${reverseproxy:-127.0.0.1}"
    [[ "$reverseproxy" =~ : && "$reverseproxy" != \[*\] ]] && reverseproxy="[$reverseproxy]"

    read -e -p "请输入你的反代端口 (默认: 80): " port
    port="${port:-80}"

    read -p "请输入用于 Certbot 注册的电子邮件地址: " user_email
    if [[ ! "$user_email" =~ ^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$ ]]; then
        echo "无效的电子邮件地址。"
        return
    fi

    nginx_conf="/etc/nginx/sites-available/$yuming.conf"
    sudo tee "$nginx_conf" > /dev/null <<EOF
server {
    listen 80;
    server_name $yuming;

    # 验证路径，用于 Certbot
    location ^~ /.well-known/acme-challenge/ {
        root /var/www/html;
        default_type "text/plain";
    }

    # 转发到反向代理
    location / {
        proxy_pass http://$reverseproxy:$port;
        proxy_set_header Host \$host;
        proxy_set_header X-Real-IP \$remote_addr;
        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
    }
}
EOF

    sudo ln -sf "$nginx_conf" "/etc/nginx/sites-enabled/$yuming.conf"

    if sudo nginx -t; then
        sudo systemctl reload nginx
        log "Nginx 配置已成功应用: $nginx_conf"
    else
        echo "Nginx 配置有误，无法生效。"
        return
    fi

    if sudo certbot certonly --webroot -w /var/www/html -d "$yuming" --non-interactive --agree-tos --email "$user_email"; then
        echo "SSL/TLS 证书申请成功。"
        log "SSL/TLS 证书申请成功: $yuming"

        # 添加 HTTPS 配置到 Nginx 配置文件
        sudo tee -a "$nginx_conf" > /dev/null <<EOF

server {
    listen 443 ssl;
    listen [::]:443 ssl;
    server_name $yuming;

    ssl_certificate /etc/letsencrypt/live/$yuming/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/$yuming/privkey.pem;

    location / {
        proxy_pass http://$reverseproxy:$port;
        proxy_set_header Host \$host;
        proxy_set_header X-Real-IP \$remote_addr;
        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
    }
}
EOF

        if sudo nginx -t; then
            sudo systemctl reload nginx
            log "HTTPS 配置已应用到 Nginx 配置文件。"
        else
            echo "Nginx 配置测试失败，请检查配置文件。"
            return
        fi
    else
        echo "证书申请失败，请检查域名和网络配置。"
        return
    fi
    read -p "按任意键返回主菜单..."
}

# 删除证书
delete_cert() {
    read -p "请输入要删除证书的域名: " domain
    if [ -d "/etc/letsencrypt/live/$domain" ]; then
        sudo certbot delete --cert-name "$domain"
        echo "证书已删除。"
        log "证书已删除: $domain"
    else
        echo "证书不存在或域名错误。"
    fi
}

# 删除反向代理配置
delete_reverse_proxy() {
    read -p "请输入要删除的域名配置: " domain
    nginx_conf="/etc/nginx/sites-available/$domain.conf"
    if [ -f "$nginx_conf" ]; then
        sudo rm "$nginx_conf"
        sudo rm "/etc/nginx/sites-enabled/$domain.conf"
        sudo systemctl reload nginx
        echo "反向代理配置已删除。"
        log "反向代理配置已删除: $domain"
    else
        echo "配置文件不存在。"
    fi
}

# 主菜单
main_menu() {
    while true; do
        clear
        echo "========================="
        echo "反向代理和 SSL 配置工具"
        echo "========================="
        echo "1) 安装必要软件包"
        echo "2) 配置反向代理和 SSL/TLS"
        echo "3) 删除证书"
        echo "4) 删除反向代理配置"
        echo "5) 退出"
        echo "========================="
        read -p "请输入操作编号: " choice
        case $choice in
            1)
                detect_os
                install_packages
                ;;
            2)
                configure_reverse_proxy_and_ssl
                ;;
            3)
                delete_cert
                ;;
            4)
                delete_reverse_proxy
                ;;
            5)
                exit 0
                ;;
            *)
                echo "无效的选择，请重新输入。"
                ;;
        esac
    done
}

# 启动主菜单
main_menu