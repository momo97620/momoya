#!/bin/bash

# 清屏
clear

# 日志文件
LOGFILE="/var/log/reverse_proxy_setup.log"

# 记录日志的函数
log() {
    echo "$(date '+%Y-%m-%d %H:%M:%S') - $1" >> "$LOGFILE"
}

# 动态获取操作系统
detect_os() {
    if [ -f /etc/os-release ]; then
        . /etc/os-release
        OS=$ID
        VERSION_ID=$VERSION_ID
    else
        echo "无法检测操作系统类型。请确认系统是否兼容。"
        exit 1
    fi
}

# 检查软件包是否已安装
check_installed() {
    which nginx &>/dev/null && which certbot &>/dev/null
}

# 安装必要的软件包
install_packages() {
    case $OS in
        debian | ubuntu)
            sudo apt update
            sudo apt install -y nginx certbot python3-certbot-nginx curl
            ;;
        centos | rocky | almalinux)
            sudo yum install -y epel-release
            sudo yum install -y nginx certbot python3-certbot-nginx curl
            ;;
        *)
            echo "暂不支持的操作系统: $OS"
            exit 1
            ;;
    esac
    log "必要软件包安装完成。"
}

# 修复 Certbot 路径
fix_certbot_path() {
    if ! which certbot &>/dev/null; then
        echo "Certbot 未找到，尝试修复路径..."
        if [ -d "/usr/local/bin" ]; then
            sudo ln -s /usr/bin/certbot /usr/local/bin/certbot
            echo "已修复 Certbot 路径到 /usr/local/bin/"
        else
            echo "无法找到适当的路径修复 Certbot。"
            exit 1
        fi
    fi
}

# 创建验证路径并更新配置
setup_validation_path() {
    sudo mkdir -p /var/www/html/.well-known/acme-challenge
    sudo chmod -R 755 /var/www/html/.well-known
    nginx_conf="/etc/nginx/sites-available/default"

    # 如果默认配置文件不存在，创建一个基本的 server 块
    if [ ! -f "$nginx_conf" ]; then
        echo "默认 Nginx 配置文件缺失，正在创建..."
        sudo tee "$nginx_conf" > /dev/null <<EOF
server {
    listen 80 default_server;
    server_name _;

    location / {
        root /var/www/html;
        index index.html;
    }

    location ^~ /.well-known/acme-challenge/ {
        root /var/www/html;
        default_type "text/plain";
    }
}
EOF
        log "创建了新的默认配置文件: $nginx_conf"
    fi

    # 确保 .well-known/acme-challenge 配置存在
    if ! grep -q ".well-known/acme-challenge" "$nginx_conf"; then
        sudo sed -i '/server {/a \ \ \ \ location ^~ /.well-known/acme-challenge/ {\n\ \ \ \ \ \ \ \ root /var/www/html;\n\ \ \ \ \ \ \ \ default_type "text/plain";\n\ \ \ \ }\n' "$nginx_conf"
        log "验证路径已添加到 Nginx 配置: $nginx_conf"
    fi

    # 移除可能导致冲突的默认配置文件
    if [ -f "/etc/nginx/sites-enabled/default.save" ]; then
        sudo mv /etc/nginx/sites-enabled/default.save /etc/nginx/sites-available/
        log "已移动冲突配置文件 default.save 到 sites-available。"
    fi

    if sudo nginx -t; then
        sudo systemctl reload nginx
        log "Nginx 配置已重启以应用验证路径。"
    else
        echo "Nginx 配置测试失败，请检查配置文件。"
        exit 1
    fi
}

# 获取证书到期时间
get_cert_expiry() {
    cert_info=$(sudo certbot certificates 2>/dev/null)
    if [[ $? -eq 0 && $cert_info ]]; then
        echo "当前证书列表："
        echo "$cert_info" | awk '/Certificate Name:|Expiry Date/ {print}'
    else
        echo "没有找到有效的 SSL/TLS 证书。"
    fi
}

# 删除证书
delete_certificate() {
    echo "删除证书..."
    read -e -p "请输入要删除的域名: " domain_to_delete
    if sudo certbot delete --cert-name "$domain_to_delete"; then
        echo "证书删除成功: $domain_to_delete"
        log "删除证书: $domain_to_delete"
    else
        echo "未能成功删除证书，检查域名拼写是否正确。"
    fi
    read -p "按任意键返回主菜单..." 
}

# 检查 Nginx 状态
check_nginx_status() {
    if systemctl is-active --quiet nginx; then
        echo "Nginx 状态: 运行中"
    else
        echo "Nginx 状态: 未安装或未运行"
    fi
}

# 主菜单显示
show_menu() {
    clear
    check_nginx_status
    echo ""
    get_cert_expiry
    echo ""
    echo "=========================================="
    echo "请选择操作："
    echo "1. 配置反向代理并申请 SSL 证书"
    echo "2. 查询已配置的反向代理域名或 IP"
    echo "3. 查询已申请的证书"
    echo "4. 删除证书"
    echo "0. 退出"
    echo "=========================================="
}

# 主循环
if [ ! -f /etc/reverse_proxy_setup_done ]; then
    detect_os
    if ! check_installed; then
        install_packages
    fi
    fix_certbot_path
    setup_validation_path
    sudo touch /etc/reverse_proxy_setup_done
    echo "首次安装已完成，跳过后续安装步骤。"
fi

while true; do
    show_menu
    read -p "请输入操作编号 (0-4): " choice
    case $choice in
        1) configure_reverse_proxy_and_ssl ;;
        2) ls /etc/nginx/sites-available/; read -p "按任意键返回主菜单..." ;;
        3) sudo certbot certificates; read -p "按任意键返回主菜单..." ;;
        4) delete_certificate ;;
        0) 
            echo -e "\033[31m退出程序！\033[0m"
            exit 0 ;;
        *) echo "无效的选择，请重新输入。" ;;
    esac
done