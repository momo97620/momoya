#!/bin/bash

# 清屏
clear

# 菜单显示
echo "=========================================="
echo "请选择操作："
echo "1. 配置反向代理并申请 SSL 证书"
echo "2. 查询已配置的反向代理域名或 IP"
echo "3. 查询已申请的证书"
echo "=========================================="

# 读取用户输入
read -p "请输入操作编号 (1-3): " choice

# 设置默认值
yuming=""
reverseproxy=""
port=""

# 安装 Nginx 和 Certbot 函数
install_nginx() {
    if ! command -v nginx &> /dev/null; then
        echo "Nginx 未安装，正在安装..."
        sudo apt update
        sudo apt install nginx -y
    else
        echo "Nginx 已安装"
    fi
}

install_certbot() {
    if ! command -v certbot &> /dev/null; then
        echo "Certbot 未安装，正在安装..."
        sudo apt install certbot python3-certbot-nginx -y
    else
        echo "Certbot 已安装"
    fi
}

# 检查域名格式
validate_domain() {
    if [[ ! "$1" =~ ^[a-zA-Z0-9.-]+$ ]]; then
        echo "无效的域名格式，请重新输入。"
        exit 1
    fi
}

# 配置反向代理并申请证书
configure_reverse_proxy_and_ssl() {
    echo "配置反向代理并申请 SSL/TLS 证书..."

    # 输入域名
    read -e -p "请输入你的域名: " yuming
    validate_domain "$yuming"

    # 输入电子邮件地址
    echo "请输入用于 Certbot 注册的电子邮件地址（用于接收证书到期提醒）："
    read -p "邮箱: " user_email

    if [[ ! "$user_email" =~ ^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$ ]]; then
        echo "无效的电子邮件地址，请重新运行脚本并输入正确的邮箱。"
        exit 1
    fi

    # 输入反向代理 IP 或 IPv6 地址
    read -e -p "请输入你的反代IP或IPv6地址 [默认: 127.0.0.1]: " reverseproxy
    reverseproxy="${reverseproxy:-127.0.0.1}"

    # 检测 IPv6 并处理格式
    if [[ "$reverseproxy" =~ : ]]; then
        [[ "$reverseproxy" != \[*\] ]] && reverseproxy="[$reverseproxy]"
    fi

    # 输入反向代理端口
    read -e -p "请输入你的反代端口 [默认: 80]: " port
    port="${port:-80}"

    # 检查反向代理是否可达
    if [[ "$reverseproxy" =~ : ]]; then
        if ! curl -g --silent --connect-timeout 5 "http://$reverseproxy:$port" > /dev/null; then
            echo "反向代理 IPv6 地址或端口不可达，请检查配置。"
            exit 1
        fi
    else
        if ! curl --silent --connect-timeout 5 "http://$reverseproxy:$port" > /dev/null; then
            echo "反向代理 IP 或端口不可达，请检查配置。"
            exit 1
        fi
    fi

    # Nginx 配置文件路径
    nginx_conf="/etc/nginx/sites-available/$yuming.conf"
    template_path="/etc/nginx/sites-available/template.conf"

    # 使用模板生成配置文件
    echo "基于模板创建 Nginx 配置文件..."
    if [ -f "$template_path" ]; then
        sudo cp "$template_path" "$nginx_conf"
        sudo sed -i "s/example.com/$yuming/g" "$nginx_conf"
        sudo sed -i "s|127.0.0.1:80|$reverseproxy:$port|g" "$nginx_conf"
    else
        echo "模板文件缺失，无法生成配置文件。"
        exit 1
    fi

    # 启用配置
    sudo ln -sf "$nginx_conf" /etc/nginx/sites-enabled/"

    # 测试 Nginx 配置
    if sudo nginx -t; then
        echo "Nginx 配置正确，正在重启..."
        sudo systemctl restart nginx
    else
        echo "Nginx 配置有误，无法重启。"
        exit 1
    fi

    # 安装 Certbot
    install_certbot

    # 使用 Certbot 申请证书
    echo "正在申请 SSL/TLS 证书..."
    if sudo certbot --nginx -d "$yuming" --non-interactive --agree-tos --email "$user_email"; then
        echo "SSL/TLS 证书申请成功!"
    else
        echo "证书申请失败，请检查域名和网络配置。"
        exit 1
    fi
}

# 查询已配置的反向代理
query_reverse_proxy() {
    echo "查询已配置的反向代理..."

    if [ -d /etc/nginx/sites-available/ ]; then
        echo "已配置的反向代理域名和 IP:"
        for file in /etc/nginx/sites-available/*; do
            domain=$(grep -oP '(?<=server_name\s)[^\s;]+' "$file")
            proxy_ip=$(grep -oP '(?<=proxy_pass\shttp://)[^\s:;]+' "$file")
            [[ $domain ]] && echo "域名: $domain -> 反代 IP: $proxy_ip"
        done
    else
        echo "未找到任何反向代理配置文件。"
    fi
}

# 查询已申请的证书
query_certificates() {
    echo "查询已申请的 SSL/TLS 证书..."
    sudo certbot certificates | grep -E 'Domains|Certificate Path' | while read -r line; do
        echo "$line"
    done
}

# 根据用户选择执行操作
case $choice in
    1)
        install_nginx
        configure_reverse_proxy_and_ssl
        ;;
    2)
        query_reverse_proxy
        ;;
    3)
        query_certificates
        ;;
    *)
        echo "无效的选择，请选择 1 到 3 之间的数字。"
        ;;
esac