#!/bin/bash

# 清屏
clear

# 日志文件
LOGFILE="/var/log/reverse_proxy_setup.log"

# 记录日志的函数
log() {
    echo "$(date '+%Y-%m-%d %H:%M:%S') - $1" >> "$LOGFILE"
}

# 动态获取操作系统
detect_os() {
    if [ -f /etc/os-release ]; then
        . /etc/os-release
        OS=$ID
        VERSION_ID=$VERSION_ID
    else
        echo "无法检测操作系统类型。请确认系统是否兼容。"
        exit 1
    fi
}

# 检查软件包是否已安装
check_installed() {
    which nginx &>/dev/null && which certbot &>/dev/null
}

# 安装必要的软件包
install_packages() {
    case $OS in
        debian | ubuntu)
            sudo apt update
            sudo apt install -y nginx certbot python3-certbot-nginx curl
            ;;
        centos | rocky | almalinux)
            sudo yum install -y epel-release
            sudo yum install -y nginx certbot python3-certbot-nginx curl
            ;;
        *)
            echo "暂不支持的操作系统: $OS"
            exit 1
            ;;
    esac
    log "必要软件包安装完成。"
}

# 修复 Certbot 路径
fix_certbot_path() {
    if ! which certbot &>/dev/null; then
        echo "Certbot 未找到，尝试修复路径..."
        if [ -d "/usr/local/bin" ]; then
            sudo ln -s /usr/bin/certbot /usr/local/bin/certbot
            echo "已修复 Certbot 路径到 /usr/local/bin/"
        else
            echo "无法找到适当的路径修复 Certbot。"
            exit 1
        fi
    fi
}

# 检查模板文件是否存在
check_template_file() {
    TEMPLATE_PATH="/etc/nginx/sites-available/template.conf"
    if [ ! -f "$TEMPLATE_PATH" ]; then
        echo "模板文件缺失，正在创建默认模板文件..."
        sudo mkdir -p /etc/nginx/sites-available
        cat <<EOL | sudo tee $TEMPLATE_PATH > /dev/null
server {
    listen 80;
    server_name example.com;

    location / {
        proxy_pass http://127.0.0.1:80;
        proxy_set_header Host \$host;
        proxy_set_header X-Real-IP \$remote_addr;
        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto \$scheme;
    }
}
EOL
        log "默认模板文件已创建: $TEMPLATE_PATH"
    fi
}

# 获取证书到期时间
get_cert_expiry() {
    cert_info=$(sudo certbot certificates 2>/dev/null)
    if [[ $? -eq 0 && $cert_info ]]; then
        expiry_date=$(echo "$cert_info" | grep 'Expiry Date' | awk '{print $3, $4, $5}')
        echo "当前证书到期时间: $expiry_date"
    else
        echo "没有找到有效的 SSL/TLS 证书。"
    fi
}

# 检查 Nginx 状态
check_nginx_status() {
    if systemctl is-active --quiet nginx; then
        echo "Nginx 状态: 运行中"
    else
        echo "Nginx 状态: 未安装或未运行"
    fi
}

# 主菜单显示
show_menu() {
    clear
    check_nginx_status
    echo ""
    get_cert_expiry
    echo ""
    echo "=========================================="
    echo "请选择操作："
    echo "1. 配置反向代理并申请 SSL 证书"
    echo "2. 查询已配置的反向代理域名或 IP"
    echo "3. 查询已申请的证书"
    echo "4. 删除反向代理配置"
    echo "0. 退出"
    echo "=========================================="
}

# 配置反向代理并申请证书
configure_reverse_proxy_and_ssl() {
    echo "配置反向代理并申请 SSL/TLS 证书..."

    # 输入域名
    read -e -p "请输入你的域名: " yuming
    if [[ ! "$yuming" =~ ^[a-zA-Z0-9.-]+$ ]]; then
        echo "无效的域名格式。"
        exit 1
    fi

    # 输入反向代理地址
    read -e -p "请输入你的反代 IP 或 IPv6 地址 (默认: 127.0.0.1): " reverseproxy
    reverseproxy="${reverseproxy:-127.0.0.1}"
    [[ "$reverseproxy" =~ : && "$reverseproxy" != \[*\] ]] && reverseproxy="[$reverseproxy]"

    # 输入端口
    read -e -p "请输入你的反代端口 (默认: 80): " port
    port="${port:-80}"

    # 输入邮箱
    read -p "请输入用于 Certbot 注册的电子邮件地址: " user_email
    if [[ ! "$user_email" =~ ^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$ ]]; then
        echo "无效的电子邮件地址。"
        exit 1
    fi

    # Nginx 配置文件路径
    nginx_conf="/etc/nginx/sites-available/$yuming.conf"
    sudo cp "$TEMPLATE_PATH" "$nginx_conf"
    sudo sed -i "s/example.com/$yuming/g" "$nginx_conf"
    sudo sed -i "s|127.0.0.1:80|$reverseproxy:$port|g" "$nginx_conf"

    # 启用配置
    sudo ln -sf "$nginx_conf" "/etc/nginx/sites-enabled/$yuming.conf"

    # 测试 Nginx 配置
    if sudo nginx -t; then
        sudo systemctl restart nginx
        echo "Nginx 配置已生效。"
        log "Nginx 配置已成功应用。"
    else
        echo "Nginx 配置有误，无法生效。"
        exit 1
    fi

    # 申请证书
    if sudo certbot --nginx -d "$yuming" --non-interactive --agree-tos --email "$user_email"; then
        echo "SSL/TLS 证书申请成功。"
        log "SSL/TLS 证书申请成功: $yuming"
    else
        echo "证书申请失败，请检查域名和网络配置。"
        exit 1
    fi
}

# 删除反向代理配置
delete_reverse_proxy() {
    echo "删除反向代理配置..."
    read -e -p "请输入要删除的域名: " domain_to_delete
    nginx_conf="/etc/nginx/sites-available/$domain_to_delete.conf"
    if [ -f "$nginx_conf" ]; then
        sudo rm "$nginx_conf"
        sudo rm "/etc/nginx/sites-enabled/$domain_to_delete.conf"
        sudo systemctl restart nginx
        echo "反向代理配置已删除: $domain_to_delete"
        log "删除反向代理配置: $domain_to_delete"
    else
        echo "未找到该域名的配置。"
    fi
}

# 主循环
if [ ! -f /etc/reverse_proxy_setup_done ]; then
    detect_os
    if ! check_installed; then
        install_packages
    fi
    fix_certbot_path
    check_template_file
    sudo touch /etc/reverse_proxy_setup_done
    echo "首次安装已完成，跳过后续安装步骤。"
fi

while true; do
    show_menu
    read -p "请输入操作编号 (0-4): " choice
    case $choice in
        1) configure_reverse_proxy_and_ssl ;;
        2) ls /etc/nginx/sites-available/ ;;
        3) sudo certbot certificates ;;
        4) delete_reverse_proxy ;;
        0) exit 0 ;;
        *) echo "无效的选择，请重新输入。" ;;
    esac
done