#!/bin/bash

# 颜色定义
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m'

# 检查是否以root权限运行
if [[ $EUID -ne 0 ]]; then
    echo -e "${RED}此脚本必须以root权限运行 (sudo)${NC}" 
    exit 1
fi

# 安装 Docker
install_docker() {
    echo -e "${YELLOW}正在安装 Docker...${NC}"

    # 更新包索引
    sudo apt update -y

    # 安装依赖
    sudo apt install apt-transport-https ca-certificates curl software-properties-common -y

    # 添加 Docker 官方 GPG 密钥
    curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg

    # 添加 Docker 官方源
    echo "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

    # 安装 Docker CE (社区版)
    sudo apt update -y
    sudo apt install docker-ce -y

    # 启动 Docker 服务并设置为开机启动
    sudo systemctl start docker
    sudo systemctl enable docker

    echo -e "${GREEN}Docker 安装成功！${NC}"
}

# 安装 Docker Compose
install_docker_compose() {
    echo -e "${YELLOW}正在安装 Docker Compose...${NC}"

    # 获取 Docker Compose 最新版本号
    VERSION=$(curl -s https://api.github.com/repos/docker/compose/releases/latest | jq -r .tag_name)

    # 下载 Docker Compose
    sudo curl -L "https://github.com/docker/compose/releases/download/${VERSION}/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose

    # 设置执行权限
    sudo chmod +x /usr/local/bin/docker-compose

    echo -e "${GREEN}Docker Compose 安装成功！${NC}"
}

# 卸载 Docker
uninstall_docker() {
    echo -e "${YELLOW}正在卸载 Docker...${NC}"

    # 停止 Docker 服务
    sudo systemctl stop docker

    # 卸载 Docker 和依赖
    sudo apt-get purge --auto-remove docker-ce docker-ce-cli containerd.io docker-compose -y

    # 删除所有容器、镜像和卷
    sudo docker system prune -a --volumes -f

    echo -e "${GREEN}Docker 已成功卸载！${NC}"
}

# 管理容器
container_management() {
    echo -e "${YELLOW}===== 容器管理 =====${NC}"
    echo "1. 查看所有容器"
    echo "2. 启动容器"
    echo "3. 停止容器"
    echo "4. 重启容器"
    echo "5. 删除容器"
    echo "0. 返回主菜单"
    read -p "请选择操作 (0-5): " choice

    case $choice in
        1)
            sudo docker ps -a
            ;;
        2)
            read -p "请输入容器 ID 或名称: " container
            sudo docker start "$container"
            echo -e "${GREEN}容器 $container 启动成功！${NC}"
            ;;
        3)
            read -p "请输入容器 ID 或名称: " container
            sudo docker stop "$container"
            echo -e "${GREEN}容器 $container 停止成功！${NC}"
            ;;
        4)
            read -p "请输入容器 ID 或名称: " container
            sudo docker restart "$container"
            echo -e "${GREEN}容器 $container 重启成功！${NC}"
            ;;
        5)
            read -p "请输入容器 ID 或名称: " container
            sudo docker rm "$container"
            echo -e "${GREEN}容器 $container 删除成功！${NC}"
            ;;
        0)
            return
            ;;
        *)
            echo -e "${RED}无效的选择，请重新输入${NC}"
            ;;
    esac
}

# 管理镜像
image_management() {
    echo -e "${YELLOW}===== 镜像管理 =====${NC}"
    echo "1. 查看所有镜像"
    echo "2. 拉取镜像"
    echo "3. 删除镜像"
    echo "0. 返回主菜单"
    read -p "请选择操作 (0-3): " choice

    case $choice in
        1)
            sudo docker images
            ;;
        2)
            read -p "请输入镜像名称: " image
            sudo docker pull "$image"
            echo -e "${GREEN}镜像 $image 拉取成功！${NC}"
            ;;
        3)
            read -p "请输入镜像名称: " image
            sudo docker rmi "$image"
            echo -e "${GREEN}镜像 $image 删除成功！${NC}"
            ;;
        0)
            return
            ;;
        *)
            echo -e "${RED}无效的选择，请重新输入${NC}"
            ;;
    esac
}

# 显示主菜单
main_menu() {
    while true; do
        echo -e "${YELLOW}===== Docker 管理工具 =====${NC}"
        echo "1. 安装 Docker"
        echo "2. 安装 Docker Compose"
        echo "3. 卸载 Docker"
        echo "4. 容器管理"
        echo "5. 镜像管理"
        echo "0. 退出"
        read -p "请选择操作 (0-5): " choice

        case $choice in
            1)
                install_docker
                ;;
            2)
                install_docker_compose
                ;;
            3)
                uninstall_docker
                ;;
            4)
                container_management
                ;;
            5)
                image_management
                ;;
            0)
                echo -e "${GREEN}感谢使用 Docker 管理工具，再见！${NC}"
                exit 0
                ;;
            *)
                echo -e "${RED}无效的选择，请重新输入${NC}"
                ;;
        esac
    done
}

# 启动主菜单
main_menu